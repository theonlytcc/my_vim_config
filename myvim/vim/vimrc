" All system-wide defaults are set in $VIMRUNTIME/debian.vim and sourced by
" the call to :runtime you can find below.  If you wish to change any of those
" settings, you should do it in this file (/etc/vim/vimrc), since debian.vim
" will be overwritten everytime an upgrade of the vim packages is performed.
" It is recommended to make changes after sourcing debian.vim since it alters
" the value of the 'compatible' option.

" This line should not be removed as it ensures that various options are
" properly set to work with the Vim-related packages available in Debian.
runtime! debian.vim
"""""""""""""""""Vundel"""""""""""""""""
"PluginIntall(!)      the cmd to install(update) sm plugin
""PluginClean(!)	the cmd to remove the unused plugins
filetype off
" this set the runtime path for vim, the vim will found the plugin in the path
set rtp+=/etc/vim/.vim/plugin/vundle.vim
call vundle#begin('/etc/vim/.vim/plugin')
Plugin 'gmarik/Vundle'
" molokai style
Bundle 'tomasr/molokai'
" Plugin taglist cannnot used
"Plugin 'taglist.vim'
"nerdtree
Bundle 'scrooloose/nerdtree'
"solarized color style
Bundle 'altercation/vim-colors-solarized'
"to help comment
Bundle 'scrooloose/nerdcommenter'
"to have a better indent
Bundle 'nathanaelkane/vim-indent-guides'
Bundle 'Valloric/YouCompleteMe'
"to change the cmd style
Bundle 'Lokaltog/vim-powerline'
"enhanced highlight
Bundle 'octol/vim-cpp-enhanced-highlight'
"trinity
Plugin 'trinity.vim'
Plugin 'wesleyche/SrcExpl'
call vundle#end()
""""""""""""""""""""""""""""""""""""""""

" Uncomment the next line to make Vim more Vi-compatible
" NOTE: debian.vim sets 'nocompatible'.  Setting 'compatible' changes numerous
" options, so any other options should be set AFTER setting 'compatible'.
"set compatible
"if you choose the compatible mode,you can not use the backspace
set nocompatible
" Vim5 and later versions support syntax highlighting. Uncommenting the next
" line enables syntax highlighting by default.
if has("syntax")
  syntax on
endif

" If using a dark background within the editing area and syntax highlighting
" turn on this option as well
"set background=dark

" Uncomment the following to have Vim jump to the last position when
" reopening a file
"if has("autocmd")
"  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
"endif

" Uncomment the following to have Vim load indentation rules and plugins
" according to the detected filetype.
"if has("autocmd")
"  filetype plugin indent on
"endif

" The following are commented out as they cause vim to behave a lot
" differently from regular Vi. They are highly recommended though.
"set showcmd		" Show (partial) command in status line.
set showmatch		" Show matching brackets.
set ignorecase		" Do case insensitive matching
set smartcase		" Do smart case matching
"""""""""""""""Indent"""""""""""""""
set autoindent
set cindent
set tabstop=4
set softtabstop=4
set shiftwidth=4
let g:indent_guides_enable_on_vim_startup=1
let g:indent_guides_start_level=2
let g:indent_guides_guide_size=1
"autocmd VimEnter,Colorscheme *:hi IndentGuidesOdd guibg=dark ctermbg=3
"autocmd VimEnter,Colorscheme *:hi IndentGuidesEven guibg=dark ctermbg=3
":nmap <silent><Leader>i <Plug>IndentGuidesToggle
"cursorline
"the red line in the right
set cc=80
"cursor line
set cursorline
"highlight the search
set hlsearch
"set cursorcolum
set guifont=YaHei\ Consolas\ Hybrid\ 11.5
"set incsearch		" Incremental search
set autowrite		" Automatically save before commands like :next and :make
"set hidden		" Hide buffers when they are abandoned
set mouse=a		" Enable mouse usage (all modes)
set selection=exclusive
set selectmode=mouse,key
set nu!
"""""""""colorscheme molokai""""""""""
set t_Co=256
colorscheme molokai
"""""""colorscheme solarized""""""""""
"
"set bg=dark
set background=dark
"""2暗绿色 3土黄色 4暗蓝色 5暗紫色 6蓝绿色 
hi comment ctermfg=6    """2暗绿色 3土黄色 4暗蓝色 5暗紫色 6蓝绿色 
" Source a global configuration file if available
" 不许折行
""""""""""""""折叠""""""""""""
"set fdm=syntax
set nowrap
""""""""""""""VimPowerLine""""""""""""
let g:Powerline_colorscheme='solarized256'
""""""""""""""CppEnhance""""""""""""""
syntax keyword cppSTLtype initializer_list
"""""""""""""NerdTree"""""""""""""""""
map <F2> :NERDTreeToggle<CR>
let NERDTreeWinSize=40
"let NERDTreeWinPos="left"
let NERDTreeShowHidden=1
let NERDTreeMinimalUI=1
let NERDTreeAutoDeleteBuffer=1
""""""""""""TagList"""""""""""""""""""
map <F3> :TlistToggle<CR>
"let Tlist_Use_Left_Window=1
let Tlist_Show_One_File=1
let Tlist_Exit_OnlyWindow=1
"let Tlist_Use_Right_Window=1
""""""""""""Cscope""""""""""""""""""""
if has("cscope")
	set csprg=/usr/bin/cscope "tell vim where to find cscope
	"set cst=0	"use cscope first and then use tag
	set cscopequickfix=s-,c-,d-,i-,t-,e- "use Quickfix window to show result
	set nocsverb
	if filereadable("cscope.out") "if there is a cscope.out then use if
		cs add cscope.out
	elseif $CSCOPE_DB != ""       "elseif the cscope variable isnot empty
		cs add $CSCOPE_DB
	endif
	set csverb
endif
nmap <C-\>s :cs find s <C-R>=expand("<cword>")<CR><CR> :copen<CR><CR>
nmap <C-\>g :cs find g <C-R>=expand("<cword>")<CR><CR> 
nmap <C-\>d :cs find d <C-R>=expand("<cword>")<CR><CR> :copen<CR><CR>
nmap <C-\>c :cs find c <C-R>=expand("<cword>")<CR><CR> :copen<CR><CR>
nmap <C-\>t :cs find t <C-R>=expand("<cword>")<CR><CR> :copen<CR><CR>
nmap <C-\>e :cs find e <C-R>=expand("<cword>")<CR><CR> :copen<CR><CR>
nmap <C-\>f :cs find f <C-R>=expand("<cfile>")<CR><CR> 
nmap <C-\>i :cs find i <C-R>=expand("<cfile>")<CR><CR> :copen<CR><CR>

""""""""""""""""Trinity"""""""""""""""""
"Open and close all the three plugin on the same time
nmap <F8> :TrinityToggleAll<CR>
"Open and close the srcexpl.vim seperately
nmap <F9> :TrinityToggleSourceExplorer<CR>
"Open and close the taglist.vim separately
nmap <F10> :TrinityToggleTagList<CR>
"Open and close the NERD_tree.vim separately
nmap <F11> :TrinityToggleNERDTree<CR>

""""""""""""""""Ctags"""""""""""""""""
set tags=tags
""""""""""""YouCompleteMe"""""""""""""
"nnoremap <leader>jc :YcmCompleter GoToDeclaration<CR>
"nnoremap <leader>jd :YcmCompleter GoToDefinition<CR>
"菜单配色补全
"highlight Pmenu ctermfg=2 ctermbg=3 guifg=#005f87 guibg=#EEE8D5
"选中项
"highlight PmenuSel ctermfg=2 ctermbg=3 guifg=#AFD700 guibg=#106900
"complete is still useful in comment
"let g:ycm_complete_in_comments=1
"Agree to load .ycm_extra_conf.py
"let g:ycm_confirm_extra_conf=0
"Agree to complete the tag
"let g:ycm_collect_identifiers_from_tags_files=1
"C++ tags
"set tags+=/data/misc/software/misc./vim/stdcpp.tags
"YCM integrate OmniCppComplete
"inoremap <Leader>; <C-x><C-o>
"set completeopt-=preview
"stop cache
"let g:ycm_cache_omnifunc=0
"complete from the first input
"let g:ycm_min_num_of_chars_for_completion=1
"complete syntax
"let g:ycm_seed_identifiers_with_syntax=1
"Nerd comment
""""""""""""""""""""""""""""""""""""
set encoding=utf-8
"make the plugin useful
filetype plugin indent on
